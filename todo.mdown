
TODO
----
0. Overall
 * ~~Create makefile.~~
 * ~~Automated testing harness.~~

1. Binary Heap
 * ~~Fix tests, and use the new framework with new makefile.~~
 * ~~Decide on whether to use int or template size~~
 * ~~Bug when constuctor size and heapify sizes don't match.~~
 * ~~Write more systematic tests for coverage of edge/corner cases.~~
 * Update using review from cr.SO.com.
  * ~~Two confusing get\_size and count functions.~~
  * ~~Pass by reference missing.~~
  * Use subtypes like value\_type, size\_type.
  * Support for iterators  : (Nice to have).
  * Support for allocators : (Nice to have) (tbb scalable allocator).
  * Form this as a container adaptor : (Nice to have).
 * Move range checks into an interface, to avoid penalty of range checks for public functions, when they are called from within.
 * Templated return types for error codes, return by reference or exceptions : (Nice to have).
   [see here](http://stackoverflow.com/questions/3157098/whats-the-right-approach-to-return-error-codes-in-c)
 * Implement O(n) Merge : (Nice to have).

2. Tree A top an array
 * Template the code, review design.
 * Generalize it to take, index and data :
 * Implement Max and Min
 * Write systematic tests.
 * verify : memory, style.

3. Range Minimum Query 
 * Template the code, review design.
 * Write systematic tests. 
 * Verify : memory, style.

4. Disjoint Set DS, linkedlist and Tree : 
 * Write systematic tests. 
 * Verify : memory, style.
   

Commit Process
--------------
1. Verify accuracy with tests.
2. Verify there are no memory leaks with valgrind/memcheck.
3. Verify that there are no heap corruption and heap usage is not abnormal with massif.
4. Verify code is templated when possible or as per the case.
5. Verify that Style Guide is reasonably followed.
6. Update README.
